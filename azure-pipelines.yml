# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
parameters:
  - name: MATH_DOJO_ENV_NAME
    default: "MATH_DOJO_ENV_NAME"
    type: string
  - name: MATH_DOJO_HTTP_REQUEST_SIGNATURE_EXPECTED_KEYID
    default: "MATH_DOJO_HTTP_REQUEST_SIGNATURE_EXPECTED_KEYID"
    type: string
  - name: MATH_DOJO_HTTP_REQUEST_SIGNATURE_B64_DER_PUBLIC_KEY
    default: "MATH_DOJO_HTTP_REQUEST_SIGNATURE_B64_DER_PUBLIC_KEY"
    type: string
  - name: SPRING_DATA_MONGODB_DATABASE
    default: "SPRING_DATA_MONGODB_DATABASE"
    type: string

trigger:
  - master
  - develop
#  - ft*  # Mute feature branch build. These can be built either on PR or unmuted for testing before a PR.

variables:
  - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}: # only works if you have a master branch
      - template: environments/pre-production.yml
      - group: 'secrets.pre-production'
  - ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}: # only works if you have a develop branch
      - template: environments/non-production.yml
      - group: 'secrets.non-production'
  - ${{ if contains(variables['Build.SourceBranchName'], 'ft') }}: # only works if you have a feature branch
      - template: environments/non-production.yml
      - group: 'secrets.non-production'
  - ${{ if contains(variables['Build.SourceBranchName'], 'merge') }}: # only works if you have a PR branch
      - template: environments/non-production.yml
      - group: 'secrets.non-production'
  - ${{ if contains(variables['Build.SourceBranchName'], 'rl') }}: # only works if you have a release branch
      - template: environments/production.yml
      - group: 'secrets.production'

pool:
  vmImage: "windows-2019"

stages:
  - stage: Build
    variables:
      ${{ if eq(variables['Build.Reason'], 'PullRequest') }}: 
        functionAppName: "pr$(System.PullRequest.PullRequestNumber)"
      ${{ if not(eq(variables['Build.Reason'], 'PullRequest')) }}: 
        functionAppName: "$(Build.SourceBranchName)"
    jobs:
      - job: Build_and_Exec_Unit_Tests
        variables:
          - name: SPRING_DATA_MONGODB_URI
            value: 'mongodb://localhost:27017'
        steps:
          - script: |
              mvnw --no-transfer-progress -DfunctionAppName=user-account-service-$(functionAppName) clean package
            displayName: Build package
          - task: PublishPipelineArtifact@1
            inputs:
              path: $(System.DefaultWorkingDirectory)
              artifact: workingDir
      - job: Local_Integ_Tests
        variables:
          - template: environments/local.yml
        steps:
          - script: |
              npm i -g azure-functions-core-tools@3 --unsafe-perm true
            displayName: Install Azure Func Core Tools
          - script: |
              cd ./integration-tests
              npm run pretest && npm run local:test:windows
            displayName: Run Local Integration Tests

  - stage: Deploy
    variables:
      ${{ if eq(variables['Build.Reason'], 'PullRequest') }}: 
        functionAppName: "pr$(System.PullRequest.PullRequestNumber)"
      ${{ if not(eq(variables['Build.Reason'], 'PullRequest')) }}: 
        functionAppName: "$(Build.SourceBranchName)"
    jobs:
      - job: Deploy_App_and_Setup_Monitoring
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: workingDir
              path: $(System.DefaultWorkingDirectory)
          - task: AzureCLI@2
            displayName: "Deploy app"
            inputs:
              addSpnToEnvironment: true
              failOnStandardError: true
              azureSubscription: user-account-service-hzprod-rg-access
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                $xmlcontent = ("<settings xmlns=`"http://maven.apache.org/SETTINGS/1.0.0`" xmlns:xsi=`"http://www.w3.org/2001/XMLSchema-instance`" xsi:schemaLocation=`"http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd`"><servers><server><id>azure-auth</id><configuration><client>$env:servicePrincipalId</client><tenant>$env:tenantId</tenant><key>$env:servicePrincipalKey</key><environment>AZURE</environment></configuration></server></servers></settings>")
                $xmlcontent
                New-Item -Path '.\.mvn\settings.xml' -ItemType "file" -Value "$xmlcontent"
                cat .\.mvn\settings.xml
                .\mvnw --settings .\.mvn\settings.xml --no-transfer-progress -DfunctionAppName=user-account-service-$(functionAppName) azure-functions:deploy

          - task: AzureCLI@2
            displayName: "Set app insights key"
            inputs:
              addSpnToEnvironment: true
              failOnStandardError: true
              azureSubscription: user-account-service-hzprod-rg-access
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                az functionapp config appsettings set --name user-account-service-$(functionAppName) --resource-group math-dojo-hzprod-user-account-service --settings "APPINSIGHTS_INSTRUMENTATIONKEY=$(APPINSIGHTS_INSTRUMENTATIONKEY)" "APPLICATIONINSIGHTS_CONNECTION_STRING=InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY)"

  - stage: Configure_App
    variables:
      ${{ if eq(variables['Build.Reason'], 'PullRequest') }}: 
        functionAppName: "pr$(System.PullRequest.PullRequestNumber)"
      ${{ if not(eq(variables['Build.Reason'], 'PullRequest')) }}: 
        functionAppName: "$(Build.SourceBranchName)"
    jobs:
      - job: Configure_Function_Parameters
        displayName: Set Env Params
        steps:
          - task: AzureCLI@2
            displayName: "Set Secret Mongo Uri on App"
            env:
              SPRING_DATA_MONGODB_URI: $(mongodbUri)
            inputs:
              addSpnToEnvironment: true
              failOnStandardError: true
              azureSubscription: user-account-service-hzprod-rg-access
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                az functionapp config appsettings set --name user-account-service-$(functionAppName) --resource-group math-dojo-hzprod-user-account-service --settings '"SPRING_DATA_MONGODB_URI=$env:SPRING_DATA_MONGODB_URI"' | Out-Null
          - ${{ each item in parameters }}:
              - task: AzureCLI@2
                displayName: "Set app param: ${{ item.value }}"
                inputs:
                  addSpnToEnvironment: true
                  failOnStandardError: true
                  azureSubscription: user-account-service-hzprod-rg-access
                  scriptType: ps
                  scriptLocation: inlineScript
                  inlineScript: |
                    az functionapp config appsettings set --name user-account-service-$(functionAppName) --resource-group math-dojo-hzprod-user-account-service --settings "${{ item.value }}=$(${{ item.value }})" | Out-Null

  - stage: Run_Integration_Tests
    variables:
      ${{ if eq(variables['Build.Reason'], 'PullRequest') }}: 
        functionAppName: "pr$(System.PullRequest.PullRequestNumber)"
      ${{ if not(eq(variables['Build.Reason'], 'PullRequest')) }}: 
        functionAppName: "$(Build.SourceBranchName)"
    condition: eq(variables['Build.Reason'], 'PullRequest')
    jobs:
      - job: Exec_Integration_Tests
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: workingDir
              path: $(System.DefaultWorkingDirectory)
            displayName: Retrieve Stashed Artefacts
          - script: |
              cd ./integration-tests
              npm test -- --world-parameters {\"baseFunctionUri\":\"https://mathdojoio.cloud.tyk.io/user-account-service-np-test/api\",\"apiKey\":\"\",\"xApiVersion\":\"$(functionAppName)\"}
            displayName: Exec Npm Test
