# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
- master
- develop
- ft*

extends:
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}: # only works if you have a master branch
    template: environments/pre-production.yml
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}: # only works if you have a develop branch
    template: environments/non-production.yml
  ${{ if contains(variables['Build.SourceBranchName'], 'ft') }}: # only works if you have a feature branch
    template: environments/non-production.yml
  ${{ if contains(variables['Build.SourceBranchName'], 'rl') }}: # only works if you have a release branch
    template: environments/production.yml

pool:
  vmImage: 'windows-2019'

stages:
- stage: Build
  jobs:
  - job: Build_and_Exec_Unit_Tests
    steps:
    - script: |
        mvnw -DfunctionAppName=user-account-service-$(Build.SourceBranchName) clean package
      displayName: Build package
    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/target
        artifact: target

- stage: Deploy
  jobs:
  - job: Deploy_App_and_Setup_Monitoring 
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: target
        path: $(System.DefaultWorkingDirectory)/target
    - task: AzureCLI@2
      displayName: 'Deploy app'
      inputs:
        addSpnToEnvironment: true
        failOnStandardError: true
        azureSubscription: user-account-service-hzprod-rg-access
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
            $xmlcontent = ("<settings xmlns=`"http://maven.apache.org/SETTINGS/1.0.0`" xmlns:xsi=`"http://www.w3.org/2001/XMLSchema-instance`" xsi:schemaLocation=`"http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd`"><servers><server><id>azure-auth</id><configuration><client>$env:servicePrincipalId</client><tenant>$env:tenantId</tenant><key>$env:servicePrincipalKey</key><environment>AZURE</environment></configuration></server></servers></settings>")
            $xmlcontent
            New-Item -Path '.\.mvn\settings.xml' -ItemType "file" -Value "$xmlcontent"
            cat .\.mvn\settings.xml
            .\mvnw --settings .\.mvn\settings.xml -DfunctionAppName=user-account-service-$(Build.SourceBranchName) azure-functions:deploy

    - task: AzureCLI@2
      displayName: 'Set app insights key'
      inputs:
        addSpnToEnvironment: true
        failOnStandardError: true
        azureSubscription: user-account-service-hzprod-rg-access
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          az functionapp config appsettings set --name user-account-service-$(Build.SourceBranchName) --resource-group math-dojo-hzprod-user-account-service --settings "APPINSIGHTS_INSTRUMENTATIONKEY=${{ parameters.APPINSIGHTS_INSTRUMENTATIONKEY }}" "APPLICATIONINSIGHTS_CONNECTION_STRING=InstrumentationKey=${{ parameters.APPINSIGHTS_INSTRUMENTATIONKEY }}"

####
#- stage: Configure_App
#  jobs:
#  - job: Configure_Function_Parameters 
#    steps:
#    - ${{ each pair in variables }}:
#      - task: AzureCLI@2
#        displayName: 'Set app param: ${{ pair.key }}'
#        inputs:
#          addSpnToEnvironment: true
#          failOnStandardError: true
#          azureSubscription: user-account-service-hzprod-rg-access
#          scriptType: ps
#          scriptLocation: inlineScript
#          inlineScript: |
#            az functionapp config appsettings set --name user-account-service-$(Build.SourceBranchName) --resource-group math-dojo-hzprod-user-account-service --settings "${{ pair.key }}=${{ pair.value }}"
